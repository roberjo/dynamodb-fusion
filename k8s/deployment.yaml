apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-fusion
  labels:
    app: dynamodb-fusion
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: dynamodb-fusion
  template:
    metadata:
      labels:
        app: dynamodb-fusion
        version: v1
    spec:
      serviceAccountName: dynamodb-fusion
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: dynamodb-fusion
        image: your-registry/dynamodb-fusion:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: DynamoDbFusion__DynamoDb__Region
          valueFrom:
            configMapKeyRef:
              name: dynamodb-fusion-config
              key: dynamodb-region
        - name: DynamoDbFusion__Cache__L2__RedisConnectionString
          valueFrom:
            secretKeyRef:
              name: dynamodb-fusion-secrets
              key: redis-connection-string
        - name: DynamoDbFusion__Cache__Enabled
          value: "true"
        - name: DynamoDbFusion__Cache__L1__Enabled
          value: "true"
        - name: DynamoDbFusion__Cache__L2__Enabled
          value: "true"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: aspnet-keys
          mountPath: /home/app/.aspnet
      volumes:
      - name: tmp
        emptyDir: {}
      - name: aspnet-keys
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dynamodb-fusion
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: dynamodb-fusion-service
  labels:
    app: dynamodb-fusion
spec:
  selector:
    app: dynamodb-fusion
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dynamodb-fusion
  labels:
    app: dynamodb-fusion

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dynamodb-fusion-config
  labels:
    app: dynamodb-fusion
data:
  dynamodb-region: "us-east-1"
  cache-l1-max-entries: "1000"
  cache-l1-max-memory-mb: "100"
  cache-l1-expiration-minutes: "5"
  cache-l2-expiration-minutes: "30"
  logging-level: "Information"

---
apiVersion: v1
kind: Secret
metadata:
  name: dynamodb-fusion-secrets
  labels:
    app: dynamodb-fusion
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  redis-connection-string: bG9jYWxob3N0OjYzNzk= # localhost:6379

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dynamodb-fusion-ingress
  labels:
    app: dynamodb-fusion
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - dynamodb-fusion.example.com
    secretName: dynamodb-fusion-tls
  rules:
  - host: dynamodb-fusion.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dynamodb-fusion-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dynamodb-fusion-hpa
  labels:
    app: dynamodb-fusion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dynamodb-fusion
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dynamodb-fusion-pdb
  labels:
    app: dynamodb-fusion
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dynamodb-fusion 